"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _InViewport = _interopRequireDefault(require("../../InViewport"));

var styles = {
  "DropdownContainer": "DropdownContainer__DropdownContainer___3WlJM",
  "DropdownContainer__submenu": "DropdownContainer__DropdownContainer__submenu___32iPV",
  "DropdownContainer__container-position--right": "DropdownContainer__DropdownContainer__container-position--right___1EoB6",
  "DropdownContainer__container-position--left": "DropdownContainer__DropdownContainer__container-position--left___3dbcX"
};
var defaultProps = {
  testId: 'cf-ui-dropdown-portal',
  position: 'bottom-left',
  submenu: false,
  isAutoalignmentEnabled: true,
  getRef: function getRef() {}
};

var DropdownContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(DropdownContainer, _Component);

  function DropdownContainer() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, DropdownContainer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(DropdownContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "portalTarget", document.createElement('div'));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "dropdown", null);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "lastOverflowAt", null);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      position: _this.props.position,
      dropdownDimensions: {
        width: 0,
        height: 0
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "trackOutsideClick", function (e) {
      if (_this.dropdown && !_this.dropdown.contains(e.target) && _this.props.dropdownAnchor && !_this.props.dropdownAnchor.contains(e.target)) {
        if (_this.props.onClose) {
          _this.props.onClose();
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleOverflow", function (overflowAt) {
      if (!_this.props.isAutoalignmentEnabled) {
        return;
      }

      if (overflowAt === _this.lastOverflowAt) {
        return;
      }

      var resolutions = {
        right: {
          'bottom-left': 'bottom-right',
          'top-left': 'top-right',
          right: 'left'
        },
        left: {
          'bottom-right': 'bottom-left',
          'top-right': 'top-left',
          left: 'right'
        },
        top: {
          'top-left': 'bottom-left',
          'top-right': 'bottom-right'
        },
        bottom: {
          'bottom-left': 'top-left',
          'bottom-right': 'top-right'
        }
      };
      var currentPosition = _this.state.position;
      var resolution = resolutions[overflowAt][currentPosition];

      if (resolution) {
        _this.setState({
          position: resolution
        }, function () {
          _this.lastOverflowAt = overflowAt;
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "calculatePosition", function () {
      var anchorDimensionsAndPositon = _this.props.anchorDimensionsAndPositon;
      var _this$state = _this.state,
          dropdownDimensions = _this$state.dropdownDimensions,
          position = _this$state.position;

      if (!anchorDimensionsAndPositon || !dropdownDimensions) {
        return false;
      }

      switch (position) {
        case 'bottom-left':
          return {
            top: anchorDimensionsAndPositon.top + anchorDimensionsAndPositon.height,
            left: anchorDimensionsAndPositon.left
          };

        case 'top-left':
          return {
            bottom: window.innerHeight - anchorDimensionsAndPositon.top,
            left: anchorDimensionsAndPositon.left
          };

        case 'bottom-right':
          return {
            top: anchorDimensionsAndPositon.top + anchorDimensionsAndPositon.height,
            left: anchorDimensionsAndPositon.left - (dropdownDimensions.width - anchorDimensionsAndPositon.width)
          };

        case 'top-right':
          return {
            bottom: window.innerHeight - anchorDimensionsAndPositon.top,
            left: anchorDimensionsAndPositon.left - (dropdownDimensions.width - anchorDimensionsAndPositon.width)
          };
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getSubmenuClassNames", function () {
      return (0, _classnames.default)(styles['DropdownContainer__submenu'], styles["DropdownContainer__container-position--".concat(_this.state.position)]);
    });
    return _this;
  }

  (0, _createClass2.default)(DropdownContainer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      document.body.appendChild(this.portalTarget);

      if (this.dropdown) {
        var dropdownRect = this.dropdown.getBoundingClientRect();
        this.setState({
          dropdownDimensions: {
            width: dropdownRect.width,
            height: dropdownRect.height
          }
        });
      }

      document.addEventListener('mousedown', this.trackOutsideClick, true);
      this.props.getRef(this.dropdown);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      document.body.removeChild(this.portalTarget);
      document.removeEventListener('mousedown', this.trackOutsideClick, true);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          submenu = _this$props.submenu,
          className = _this$props.className,
          width = _this$props.width;
      var classNames = (0, _classnames.default)(className, styles['DropdownContainer'], submenu ? this.getSubmenuClassNames() : '');

      var dropdown = _react.default.createElement("div", {
        ref: function ref(_ref) {
          _this2.dropdown = _ref;
        },
        style: (0, _objectSpread2.default)({}, width ? {
          width: "".concat(width, "px")
        } : {}, !submenu && this.calculatePosition()),
        className: classNames,
        onMouseEnter: function onMouseEnter() {
          if (_this2.props.openSubmenu) {
            _this2.props.openSubmenu(true);
          }
        },
        onFocus: function onFocus() {
          if (_this2.props.openSubmenu) {
            _this2.props.openSubmenu(true);
          }
        },
        onMouseLeave: function onMouseLeave() {
          if (_this2.props.openSubmenu) {
            _this2.props.openSubmenu(false);
          }
        }
      }, _react.default.createElement(_InViewport.default, {
        onOverflowLeft: function onOverflowLeft() {
          return _this2.handleOverflow('left');
        },
        onOverflowRight: function onOverflowRight() {
          return _this2.handleOverflow('right');
        },
        onOverflowTop: function onOverflowTop() {
          return _this2.handleOverflow('top');
        },
        onOverflowBottom: function onOverflowBottom() {
          return _this2.handleOverflow('bottom');
        }
      }, this.props.children));

      return submenu ? dropdown : _reactDom.default.createPortal(dropdown, this.portalTarget);
    }
  }]);
  return DropdownContainer;
}(_react.Component);

DropdownContainer.displayName = "DropdownContainer";
(0, _defineProperty2.default)(DropdownContainer, "propTypes", {
  onClose: _propTypes.default.any,
  dropdownAnchor: _propTypes.default.oneOfType([_propTypes.default.any, _propTypes.default.oneOf([null])]),
  className: _propTypes.default.string,
  children: _propTypes.default.node,
  testId: _propTypes.default.string,
  openSubmenu: _propTypes.default.func,
  anchorDimensionsAndPositon: _propTypes.default.any,
  position: _propTypes.default.any.isRequired,
  getRef: _propTypes.default.func,
  submenu: _propTypes.default.bool,
  width: _propTypes.default.number,
  isAutoalignmentEnabled: _propTypes.default.bool
});
(0, _defineProperty2.default)(DropdownContainer, "defaultProps", defaultProps);
var _default = DropdownContainer;
exports.default = _default;