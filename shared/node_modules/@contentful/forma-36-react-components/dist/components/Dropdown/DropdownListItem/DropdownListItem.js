"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.DropdownListItem = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _TabFocusTrap = _interopRequireDefault(require("../../TabFocusTrap/TabFocusTrap"));

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var styles = {
  "DropdownListItem": "DropdownListItem__DropdownListItem___LOUnP",
  "DropdownListItem__button": "DropdownListItem__DropdownListItem__button___1Po6h a11y__focus-outline--default___2hwb1",
  "DropdownListItem__submenu-toggle": "DropdownListItem__DropdownListItem__submenu-toggle___1SVw1",
  "DropdownListItem__button__inner-wrapper": "DropdownListItem__DropdownListItem__button__inner-wrapper___LFlkP",
  "DropdownListItem--disabled": "DropdownListItem__DropdownListItem--disabled___1txXv",
  "DropdownListItem--active": "DropdownListItem__DropdownListItem--active___21eet",
  "DropdownListItem--title": "DropdownListItem__DropdownListItem--title___CyVKB"
};
var defaultProps = {
  testId: 'cf-ui-dropdown-list-item',
  isDisabled: false,
  isActive: false,
  isTitle: false
};

var DropdownListItem = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(DropdownListItem, _Component);

  var _super = _createSuper(DropdownListItem);

  function DropdownListItem() {
    var _this;

    (0, _classCallCheck2["default"])(this, DropdownListItem);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderSubmenuToggle", function () {
      var _this$props = _this.props,
          onClick = _this$props.onClick,
          onEnter = _this$props.onEnter,
          onLeave = _this$props.onLeave,
          onFocus = _this$props.onFocus,
          children = _this$props.children,
          submenuToggleLabel = _this$props.submenuToggleLabel,
          testId = _this$props.testId,
          isDisabled = _this$props.isDisabled,
          isActive = _this$props.isActive,
          isTitle = _this$props.isTitle,
          otherProps = (0, _objectWithoutProperties2["default"])(_this$props, ["onClick", "onEnter", "onLeave", "onFocus", "children", "submenuToggleLabel", "testId", "isDisabled", "isActive", "isTitle"]);
      return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement("button", (0, _extends2["default"])({
        type: "button",
        "data-test-id": "cf-ui-dropdown-submenu-toggle",
        className: styles['DropdownListItem__button'],
        onClick: onClick,
        onMouseEnter: onEnter,
        onFocus: onFocus,
        onMouseLeave: onLeave
      }, otherProps), /*#__PURE__*/_react["default"].createElement(_TabFocusTrap["default"], {
        className: styles['DropdownListItem__button__inner-wrapper']
      }, submenuToggleLabel)), children);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderListItem", function () {
      var _this$props2 = _this.props,
          _onClick = _this$props2.onClick,
          _onMouseDown = _this$props2.onMouseDown,
          href = _this$props2.href,
          isDisabled = _this$props2.isDisabled,
          children = _this$props2.children,
          isTitle = _this$props2.isTitle,
          isActive = _this$props2.isActive,
          testId = _this$props2.testId,
          listItemRef = _this$props2.listItemRef,
          otherProps = (0, _objectWithoutProperties2["default"])(_this$props2, ["onClick", "onMouseDown", "href", "isDisabled", "children", "isTitle", "isActive", "testId", "listItemRef"]);
      var isClickable = _onClick || _onMouseDown || href;

      if (isClickable) {
        var Element = href ? 'a' : 'button';
        var buttonProps = {
          disabled: isDisabled,
          'aria-disabled': isDisabled
        };
        var linkProps = {
          href: href
        };
        return /*#__PURE__*/_react["default"].createElement(Element, (0, _extends2["default"])({
          type: "button",
          onClick: function onClick(e) {
            if (!isDisabled && _onClick) {
              _onClick(e);
            }
          },
          onMouseDown: function onMouseDown(e) {
            if (!isDisabled && _onMouseDown) {
              _onMouseDown(e);
            }
          }
        }, href ? linkProps : buttonProps, otherProps, {
          "data-test-id": "cf-ui-dropdown-list-item-button",
          className: styles['DropdownListItem__button']
        }), /*#__PURE__*/_react["default"].createElement(_TabFocusTrap["default"], {
          className: styles['DropdownListItem__button__inner-wrapper']
        }, children));
      }

      return /*#__PURE__*/_react["default"].createElement("span", otherProps, children);
    });
    return _this;
  }

  (0, _createClass2["default"])(DropdownListItem, [{
    key: "render",
    value: function render() {
      var _cn;

      var _this$props3 = this.props,
          className = _this$props3.className,
          isDisabled = _this$props3.isDisabled,
          testId = _this$props3.testId,
          listItemRef = _this$props3.listItemRef,
          isActive = _this$props3.isActive,
          onClick = _this$props3.onClick,
          onMouseDown = _this$props3.onMouseDown,
          href = _this$props3.href,
          submenuToggleLabel = _this$props3.submenuToggleLabel,
          isTitle = _this$props3.isTitle;
      var classNames = (0, _classnames["default"])(styles['DropdownListItem'], className, (_cn = {}, (0, _defineProperty2["default"])(_cn, styles['DropdownListItem__submenu-toggle'], submenuToggleLabel || onClick || onMouseDown || href), (0, _defineProperty2["default"])(_cn, styles['DropdownListItem--disabled'], isDisabled), (0, _defineProperty2["default"])(_cn, styles['DropdownListItem--active'], isActive), (0, _defineProperty2["default"])(_cn, styles['DropdownListItem--title'], isTitle), _cn));
      return /*#__PURE__*/_react["default"].createElement("li", {
        className: classNames,
        "data-test-id": testId,
        ref: listItemRef,
        role: "menuitem"
      }, submenuToggleLabel ? this.renderSubmenuToggle() : this.renderListItem());
    }
  }]);
  return DropdownListItem;
}(_react.Component);

exports.DropdownListItem = DropdownListItem;
DropdownListItem.displayName = "DropdownListItem";
(0, _defineProperty2["default"])(DropdownListItem, "propTypes", {
  isDisabled: _propTypes["default"].bool.isRequired,
  listItemRef: _propTypes["default"].any,
  isActive: _propTypes["default"].bool.isRequired,
  isTitle: _propTypes["default"].bool.isRequired,
  children: _propTypes["default"].node.isRequired,
  onClick: _propTypes["default"].func,
  onMouseDown: _propTypes["default"].func,
  submenuToggleLabel: _propTypes["default"].string,
  href: _propTypes["default"].string,
  onFocus: _propTypes["default"].func,
  onLeave: _propTypes["default"].func,
  onEnter: _propTypes["default"].func,
  className: _propTypes["default"].string,
  testId: _propTypes["default"].string
});
(0, _defineProperty2["default"])(DropdownListItem, "defaultProps", defaultProps);
var _default = DropdownListItem;
exports["default"] = _default;