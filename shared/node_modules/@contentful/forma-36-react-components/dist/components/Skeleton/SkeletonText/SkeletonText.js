"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SkeletonText = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var defaultProps = {
  numberOfLines: 1,
  offsetTop: 0,
  offsetLeft: 0,
  lineHeight: 21,
  marginBottom: 20
};

var SkeletonText =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(SkeletonText, _Component);

  function SkeletonText() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, SkeletonText);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SkeletonText)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getLineWidth", function (lastLine) {
      if (_this.props.width) {
        return _this.props.width;
      }

      return lastLine ? '80%' : '100%';
    });
    return _this;
  }

  (0, _createClass2.default)(SkeletonText, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          numberOfLines = _this$props.numberOfLines,
          offsetLeft = _this$props.offsetLeft,
          offsetTop = _this$props.offsetTop,
          lineHeight = _this$props.lineHeight,
          marginBottom = _this$props.marginBottom;
      return _react.default.createElement(_react.default.Fragment, null, Array.from(Array(numberOfLines)).map(function (_, index) {
        return _react.default.createElement("rect", {
          key: "skeleton-display-text-".concat(index) // eslint-disable-line
          ,
          x: offsetLeft,
          y: index * (lineHeight + marginBottom) + offsetTop,
          rx: "0",
          ry: "0",
          width: _this2.getLineWidth(numberOfLines > 1 && numberOfLines - index === 1),
          height: lineHeight
        });
      }));
    }
  }]);
  return SkeletonText;
}(_react.Component);

exports.SkeletonText = SkeletonText;
SkeletonText.displayName = "SkeletonText";
(0, _defineProperty2.default)(SkeletonText, "propTypes", {
  numberOfLines: _propTypes.default.number.isRequired,
  offsetTop: _propTypes.default.number.isRequired,
  offsetLeft: _propTypes.default.number.isRequired,
  lineHeight: _propTypes.default.number.isRequired,
  marginBottom: _propTypes.default.number.isRequired,
  width: _propTypes.default.number
});
(0, _defineProperty2.default)(SkeletonText, "defaultProps", defaultProps);
var _default = SkeletonText;
exports.default = _default;