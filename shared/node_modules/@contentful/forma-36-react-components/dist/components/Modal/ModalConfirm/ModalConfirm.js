"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ModalConfirm = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _Modal = _interopRequireDefault(require("../Modal/Modal"));

var _Button = _interopRequireDefault(require("../../Button"));

var defaultProps = {
  testId: 'cf-ui-modal-confirm',
  confirmTestId: 'cf-ui-modal-confirm-confirm-button',
  cancelTestId: 'cf-ui-modal-confirm-cancel-button',
  title: 'Are you sure?',
  confirmLabel: 'Confirm',
  cancelLabel: 'Cancel',
  intent: 'positive',
  shouldCloseOnOverlayClick: true,
  shouldCloseOnEscapePress: true,
  isConfirmDisabled: false,
  isConfirmLoading: false,
  size: 'medium',
  allowHeightOverflow: false
};

var ModalConfirm =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(ModalConfirm, _Component);

  function ModalConfirm() {
    (0, _classCallCheck2.default)(this, ModalConfirm);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModalConfirm).apply(this, arguments));
  }

  (0, _createClass2.default)(ModalConfirm, [{
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          children = _this$props.children,
          testId = _this$props.testId,
          isShown = _this$props.isShown,
          title = _this$props.title,
          onConfirm = _this$props.onConfirm,
          onCancel = _this$props.onCancel,
          size = _this$props.size,
          confirmLabel = _this$props.confirmLabel,
          cancelLabel = _this$props.cancelLabel,
          intent = _this$props.intent,
          shouldCloseOnOverlayClick = _this$props.shouldCloseOnOverlayClick,
          shouldCloseOnEscapePress = _this$props.shouldCloseOnEscapePress,
          allowHeightOverflow = _this$props.allowHeightOverflow,
          isConfirmDisabled = _this$props.isConfirmDisabled,
          isConfirmLoading = _this$props.isConfirmLoading,
          confirmTestId = _this$props.confirmTestId,
          cancelTestId = _this$props.cancelTestId;
      return _react.default.createElement(_Modal.default, {
        testId: testId,
        isShown: isShown,
        onClose: onCancel,
        size: size,
        shouldCloseOnOverlayClick: shouldCloseOnOverlayClick,
        shouldCloseOnEscapePress: shouldCloseOnEscapePress,
        allowHeightOverflow: allowHeightOverflow
      }, function () {
        return _react.default.createElement("div", null, _react.default.createElement(_Modal.default.Header, (0, _extends2.default)({
          title: title
        }, _this.props.modalHeaderProps)), _react.default.createElement(_Modal.default.Content, _this.props.modalContentProps, children), _react.default.createElement(_Modal.default.Controls, _this.props.modalControlsProps, confirmLabel && _react.default.createElement(_Button.default, {
          testId: confirmTestId,
          disabled: isConfirmDisabled,
          loading: isConfirmLoading,
          buttonType: intent,
          onClick: function onClick() {
            return onConfirm();
          }
        }, confirmLabel), cancelLabel && _react.default.createElement(_Button.default, {
          testId: cancelTestId,
          buttonType: "muted",
          onClick: function onClick() {
            return onCancel();
          }
        }, cancelLabel)));
      });
    }
  }]);
  return ModalConfirm;
}(_react.Component);

exports.ModalConfirm = ModalConfirm;
ModalConfirm.displayName = "ModalConfirm";
(0, _defineProperty2.default)(ModalConfirm, "propTypes", {
  isShown: _propTypes.default.bool.isRequired,
  onConfirm: _propTypes.default.any.isRequired,
  onCancel: _propTypes.default.any.isRequired,
  title: _propTypes.default.string,
  confirmLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.oneOf([false])]),
  cancelLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.oneOf([false])]),
  intent: _propTypes.default.oneOf(['primary', 'positive', 'negative']),
  size: _propTypes.default.any,
  shouldCloseOnOverlayClick: _propTypes.default.bool,
  shouldCloseOnEscapePress: _propTypes.default.bool,
  isConfirmDisabled: _propTypes.default.bool,
  isConfirmLoading: _propTypes.default.bool,
  allowHeightOverflow: _propTypes.default.bool,
  modalHeaderProps: _propTypes.default.any,
  modalContentProps: _propTypes.default.any,
  modalControlsProps: _propTypes.default.any,
  testId: _propTypes.default.string,
  confirmTestId: _propTypes.default.string,
  cancelTestId: _propTypes.default.string,
  children: _propTypes.default.node.isRequired
});
(0, _defineProperty2.default)(ModalConfirm, "defaultProps", defaultProps);
var _default = ModalConfirm;
exports.default = _default;